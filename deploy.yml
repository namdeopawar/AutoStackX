---
- hosts: all
  become: yes
  gather_facts: no
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  tasks:
    - name: Install required packages
      apt:
        name:
          - openjdk-17-jdk
          - nginx
          - postgresql
          - git
          - maven
          - nodejs
          - npm
          - zip
        update_cache: yes
        state: present
      register: apt_result
      until: apt_result is succeeded
      retries: 3
      delay: 10  # Waits 10 seconds between retries

    - name: Start PostgreSQL service
      service:
        name: postgresql
        state: started

    - name: Create PostgreSQL database and user
      shell: |
        psql -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'testdb'" | grep -q 1 || psql -U postgres -c "CREATE DATABASE testdb;"
        psql -U postgres -tc "SELECT 1 FROM pg_roles WHERE rolname = 'testuser'" | grep -q 1 || psql -U postgres -c "CREATE USER testuser WITH PASSWORD 'TestPass123';"
        psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE testdb TO testuser;"
      environment:
        PGPASSWORD: "postgres_password"  # replace with actual PostgreSQL password if necessary
      ignore_errors: yes  # Ignore errors if the database/user already exists

    - name: Add PostgreSQL user authentication method
      lineinfile:
        path: /etc/postgresql/16/main/pg_hba.conf
        line: "local   all             testuser                                md5"
        state: present
        validate: 'pg_ctl -D /etc/postgresql/16/main -t 10 -W reload'  # Validate the configuration before applying

    - name: Restart PostgreSQL service
      service:
        name: postgresql
        state: restarted

    - name: Clone Spring Boot app from GitHub
      git:
        repo: 'https://github.com/namdeopawar/Simple-SpringBoot-ReactApp.git'
        dest: /opt/SpringBootReactApp
        version: main

    - name: Run the Spring Boot application
      shell: |
        java -jar /opt/SpringBootReactApp/artifacts/myapp*.jar &
      async: 10
      poll: 0

    - name: Unzip frontend.zip to /var/www/html/myweb/
      unarchive:
        src: /opt/SpringBootReactApp/artifacts/frontend.zip
        dest: /var/www/html/myweb/
        remote_src: yes

    - name: Configure Nginx
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/default

    - name: Test Nginx configuration
      command: nginx -t

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
